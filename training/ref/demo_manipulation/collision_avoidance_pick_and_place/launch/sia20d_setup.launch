<?xml version="1.0"?>
<launch>
  <arg name="sim" default="true"/>
  <arg name="robot_ip" unless="$(arg sim)"/>

  <!-- moveit components -->
  <include file="$(find sia20d_collision_avoidance_moveit_config)/launch/moveit_planning_execution.launch">
    <arg name="sim" value="$(arg sim)"/>
    <arg unless="$(arg sim)" name="robot_ip" value="$(arg robot_ip)"/>
  </include>

  <!-- simulated nodes -->
  <group if="$(arg sim)">
    <!-- grasp action service (simulated) -->
    <node pkg="robot_io" type="simulated_grasp_action_server" name="gripper_action_server" output="screen"/>
    <!--<include file="$(find robot_io)/launch/robot_io.launch"/>
    <node pkg="robot_io" type="versaball_action_server" name="grasp_action_server" output="screen"/>
    <param name="ball_rigid_channel" value="3"/>
    <param name="ball_flacid_channel" value="1"/>-->
    <!-- static frame publisher for simulation -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_tag" args="0.9 -0.1 0.17 0 0 0 world_frame ar_tag 100"/>

    <!-- detection node (simulation) -->
    <!--<node pkg="collision_avoidance_pick_and_place" type="simulation_recognition_service.py" name="target_recognition_service"/>-->
    <node pkg="collision_avoidance_pick_and_place" type="simulation_recognition_service.py" name="target_recognition_service"/>
  </group>

  <!-- hardware-interface nodes -->
  <group unless="$(arg sim)">
    <!-- grasp action service (real) -->
    <include file="$(find robot_io)/launch/robot_io.launch"/>
    <node pkg="robot_io" type="versaball_action_server" name="grasp_action_server" output="screen"/>
    <param name="ball_rigid_channel" value="3"/>
    <param name="ball_flacid_channel" value="1"/>

    <!-- sensor setup -->
    <include file="$(find sensor_config)/launch/sia20d_sensor_setup.launch"/>

    <!-- pick location node -->
    <include file="$(find collision_avoidance_pick_and_place)/launch/sia20d_pick_location.launch"/>
    <node pkg="tf" type="static_transform_publisher" name="world_to_tag" args="0.9 -0.1 0.17 0 0 0 world_frame ar_tag 100"/>
    <!--node pkg="collision_avoidance_pick_and_place" type="simulation_recognition_service.py" name="target_recognition_service"/-->
    
  </group>

  <!-- rviz -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" 
        args="-d $(find collision_avoidance_pick_and_place)/config/sia20d/rviz_config.rviz" output="screen">
    <rosparam command="load" file="$(find sia20d_collision_avoidance_moveit_config)/config/kinematics.yaml"/>
  </node>

</launch>
